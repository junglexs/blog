<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>《Angular 开发入门与实战》</title>
    <url>/2021/09/15/%E3%80%8AAngular%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8%E4%B8%8E%E5%AE%9E%E6%88%98%E3%80%8B/</url>
    <content><![CDATA[<p>兰泽君 著作</p>
<h2 id="读书笔记"><a href="#读书笔记" class="headerlink" title="读书笔记"></a>读书笔记</h2><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>Angular是一种流行的前端框架，由Google维护，专为开发动态单页应用（SPA）而设计。它鼓励使用TypeScript进行开发，这是JavaScript的一个超集，添加了静态类型等特性。</p>
<h4 id="第一部分：Angular基础"><a href="#第一部分：Angular基础" class="headerlink" title="第一部分：Angular基础"></a>第一部分：Angular基础</h4><ul>
<li><strong>TypeScript基础</strong>：介绍TypeScript的基本语法，以及如何在Angular项目中使用它。</li>
<li><strong>组件和模块</strong>：解释Angular应用是如何通过组件来构建用户界面的，每个组件都有自己的逻辑和模板。模块则用来组织这些组件，以及提供服务。</li>
<li><strong>模板和数据绑定</strong>：介绍如何使用Angular模板语法来显示数据和响应用户事件，以及单向和双向数据绑定的概念。</li>
<li><strong>服务和依赖注入</strong>：讨论服务的概念，这是一种用于封装业务逻辑的方法，以及Angular如何使用依赖注入（DI）模式来提供这些服务。</li>
</ul>
<h4 id="第二部分：进阶实战"><a href="#第二部分：进阶实战" class="headerlink" title="第二部分：进阶实战"></a>第二部分：进阶实战</h4><ul>
<li><strong>路由和导航</strong>：深入探讨Angular路由器的工作原理，如何定义路由规则，以及如何进行导航。</li>
<li><strong>表单处理</strong>：详细说明如何使用Angular表单模块来创建和验证用户输入表单。</li>
<li><strong>RxJS和异步编程</strong>：介绍如何使用RxJS库在Angular中处理异步操作，包括Observable和操作符的概念。</li>
<li><strong>状态管理</strong>：探讨在Angular应用中管理状态的策略，可能包括使用NgRx或其他状态管理库。</li>
</ul>
<h4 id="第三部分：项目实战"><a href="#第三部分：项目实战" class="headerlink" title="第三部分：项目实战"></a>第三部分：项目实战</h4><ul>
<li><strong>构建实际项目</strong>：通过构建一个实际的Angular应用来综合运用前面学到的知识，可能是一个电商平台、博客系统或任务管理器。</li>
<li><strong>性能优化</strong>：介绍如何分析和提升Angular应用的性能。</li>
<li><strong>部署和维护</strong>：讨论将Angular应用部署到生产环境的最佳实践，以及如何维护和更新现有应用。</li>
</ul>
<h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>《Angular 开发入门与实战》是一本面向希望深入了解Angular框架的前端开发人员的实用指南。通过阅读这本书，开发者不仅能掌握Angular的基础知识，还能学会如何在实际项目中应用这些知识来构建复杂的应用程序。</p>
<p>这份读书笔记旨在概述书中可能包含的主要内容和概念，真正的学习和理解还需深入阅读原书并实践其中的示例和技巧。</p>
]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>读书笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>《JavsScript百炼成仙》</title>
    <url>/2021/02/12/%E3%80%8AJavsScript%E7%99%BE%E7%82%BC%E6%88%90%E4%BB%99%E3%80%8B/</url>
    <content><![CDATA[<p>杨逸飞 编著</p>
<h2 id="读书笔记"><a href="#读书笔记" class="headerlink" title="读书笔记"></a>读书笔记</h2><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><ul>
<li>本书旨在通过独特的角度和轻松的方式介绍JavaScript的核心概念和高级技巧，使读者能够深入理解并灵活运用JavaScript。</li>
</ul>
<h4 id="第一章：JavaScript基础精要"><a href="#第一章：JavaScript基础精要" class="headerlink" title="第一章：JavaScript基础精要"></a>第一章：JavaScript基础精要</h4><ul>
<li>理解JavaScript语言的基本结构和语法。</li>
<li>学习变量、类型、表达式、运算符的使用。</li>
<li>函数定义、作用域和闭包的概念及其重要性。</li>
</ul>
<h4 id="第二章：函数七重关秘籍"><a href="#第二章：函数七重关秘籍" class="headerlink" title="第二章：函数七重关秘籍"></a>第二章：函数七重关秘籍</h4><ul>
<li>深入探讨函数的定义方式、作用域链、闭包、高阶函数等高级主题。</li>
<li>理解并实践回调函数、Promise和异步编程的模式。</li>
</ul>
<h4 id="第三章：DOM的艺术"><a href="#第三章：DOM的艺术" class="headerlink" title="第三章：DOM的艺术"></a>第三章：DOM的艺术</h4><ul>
<li>使用JavaScript操作DOM，包括元素选择、属性修改、事件处理等。</li>
<li>掌握使用jQuery简化DOM操作的技巧。</li>
</ul>
<h4 id="第四章：面向对象的奥义"><a href="#第四章：面向对象的奥义" class="headerlink" title="第四章：面向对象的奥义"></a>第四章：面向对象的奥义</h4><ul>
<li>探索JavaScript的面向对象编程，包括原型链、继承、类的使用。</li>
<li>理解ES6引入的类语法及其与传统原型链的关联。</li>
</ul>
<h4 id="第五章：前端框架的选择：Vue篇"><a href="#第五章：前端框架的选择：Vue篇" class="headerlink" title="第五章：前端框架的选择：Vue篇"></a>第五章：前端框架的选择：Vue篇</h4><ul>
<li>学习Vue.js框架的核心概念，包括响应式原理、组件系统、Vue实例、指令等。</li>
<li>实践Vue的基本用法，构建交云悍数据驱动的Web应用。</li>
</ul>
<h4 id="第六章：实战演练"><a href="#第六章：实战演练" class="headerlink" title="第六章：实战演练"></a>第六章：实战演练</h4><ul>
<li>结合实际案例，深入理解书中介绍的概念和技术。</li>
<li>掌握从零开始构建一个现代化的前端项目的步骤和方法。</li>
</ul>
<h4 id="附录：JavaScript进阶资源"><a href="#附录：JavaScript进阶资源" class="headerlink" title="附录：JavaScript进阶资源"></a>附录：JavaScript进阶资源</h4><ul>
<li>推荐进一步学习的书籍、在线资源和社区。</li>
<li>提供进阶学习路径，包括Node.js、React、Angular等其他流行技术的入门指导。</li>
</ul>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul>
<li>《JavaScript百炼成仙》不仅是一本技术书籍，也是一次探索JavaScript世界的奇妙旅程。</li>
<li>通过本书的学习，读者可以掌握JavaScript的核心概念、高级技巧以及前端开发的最佳实践，为成为前端开发高手打下坚实的基础。</li>
</ul>
]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>读书笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>【DevOps】笔记</title>
    <url>/2022/05/28/%E3%80%90DevOps%E3%80%91%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>DevOps</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>CI/CD</tag>
      </tags>
  </entry>
  <entry>
    <title>【Chrome】使用指南</title>
    <url>/2022/04/19/%E3%80%90Chrome%E3%80%91%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>Google Chrome</p>
<p>谷歌浏览器</p>
<h1 id="拓展程序"><a href="#拓展程序" class="headerlink" title="拓展程序"></a>拓展程序</h1><ol>
<li><strong>Google 翻译</strong> （选中翻译）</li>
<li><strong>沉浸式翻译</strong>（巨好用，双语对照）</li>
<li><strong>Proxy SwitchOmega</strong> （管理和切换代理）</li>
<li><strong>JSON Formatter</strong></li>
<li><strong>CSS Peeper</strong></li>
<li><strong>Lighthouse</strong> （分析、改善网页性能）</li>
<li><strong>React Developer Tools</strong> （React 开发）</li>
<li><strong>Redux DevTools</strong></li>
<li><strong>Shazam</strong> （听歌识曲）</li>
<li><strong>Voice Control for ChatGPT</strong> （ChatGPT 语音对话，练习口语听力）</li>
</ol>
]]></content>
      <categories>
        <category>知识库</category>
        <category>Chrome</category>
      </categories>
      <tags>
        <tag>Chrome</tag>
      </tags>
  </entry>
  <entry>
    <title>【Git&amp;GitHub】使用指南</title>
    <url>/2022/05/18/%E3%80%90Git&amp;GitHub%E3%80%91%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><h2 id="本地代码上传"><a href="#本地代码上传" class="headerlink" title="本地代码上传"></a>本地代码上传</h2><p>1.建立远程仓库<br>2.切换到项目路径，打开终端<br>3.设置用户名、邮箱 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;[你的GitHub的用户名]&quot;</span><br><span class="line">git config --global user.email &quot;[你的GitHub绑定的邮箱]&quot;</span><br></pre></td></tr></table></figure>
<p>4.查看是否创建成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --list</span><br></pre></td></tr></table></figure>
<p>5.初始化一个空的 git 本地仓库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>
<p>6.绑定本地仓库与远程仓库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote add origin [远程仓库的具体地址]</span><br></pre></td></tr></table></figure>
<p>7.查看本地分支情况</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure>
<p>8.创建并切换到 <code>master</code> 分支</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">git checkout -b master</span><br></pre></td></tr></table></figure>
<p>9.添加文件到暂存区</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure>
<p>10.将更改提交到本地仓库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git commit -m &quot;[自定义的提交信息]&quot;</span><br></pre></td></tr></table></figure>
<p>11.将本地仓库 push 到远程仓库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure>
<p>12.若发生冲突，则可以先暂存本地代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git stash -m &quot;[自定义的暂存信息]&quot;</span><br></pre></td></tr></table></figure>
<p>13.再拉取远端代码后，pop 代码，再次 push</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git stash pop</span><br><span class="line">git pull origin master</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure>

<p>14.生成 SSH Key，在图中路径找到并复制密钥</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的GitHub绑定的邮箱&quot;</span><br></pre></td></tr></table></figure>
<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7bc3ab392f0547f4bf5594d7ec660e72~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1212&h=854&s=336984&e=png&b=fdfdfd" alt="image.png"><br>或者以下代码查看密钥</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">cat ~<span class="regexp">/.ssh/i</span>d_rsa.<span class="property">pub</span></span><br></pre></td></tr></table></figure>
<p>复制密钥到GitHub上</p>
<p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ef182221a1da48cb9224430990fe493d~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=3024&h=1508&s=436959&e=png&b=fefefe" alt="image.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/90ebd1dfa5fc44b587a1cc2f1b90a8d8~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1212&h=350&s=196085&e=png&b=fdfdfd" alt="image.png"></p>
<h2 id="stash-pop-和-stash-apply-的区别"><a href="#stash-pop-和-stash-apply-的区别" class="headerlink" title="stash pop 和 stash apply 的区别"></a>stash pop 和 stash apply 的区别</h2><ul>
<li><strong>相同处</strong>：<code>git stash apply</code> 和 <code>git stash pop</code> 都是用来从存储区（stash）恢复工作目录的命令。它们的主要区别在于处理完恢复操作后对 stash 的影响。</li>
<li><strong>不同处</strong>：<code>pop</code> 会从 stash 中恢复保存的工作目录和索引，并将这些更改应用到当前分支上，但它与 <code>apply</code> 不同的是，<code>pop</code> 操作会从 stash 中删除恢复的 stash。</li>
<li><strong>总结</strong>：如果你打算在多个分支之间多次应用相同的 stash，可以使用 <code>apply</code>，这样 stash 不会被删除，你可以在需要的时候再次应用。如果你只需要一次性地应用 stash 并将其删除，可以使用 <code>pop</code>。</li>
</ul>
<h2 id="git-commit-规范"><a href="#git-commit-规范" class="headerlink" title="git commit 规范"></a>git commit 规范</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">feat(user-auth): add user authentication // 新功能（feat）</span><br><span class="line">fix(database): resolve issue with data inconsistency // Bug修复（fix）</span><br><span class="line">docs(readme): update project documentation // 文档变更（docs）</span><br><span class="line">perf(api): improve response time <span class="keyword">for</span> data retrieval // 性能优化（perf）</span><br><span class="line">style(css): adjust layout <span class="keyword">for</span> better readability // 样式修改（style）</span><br><span class="line"><span class="built_in">test</span>(api): add unit tests <span class="keyword">for</span> user service // 测试相关（<span class="built_in">test</span>）</span><br><span class="line">refactor(database): restructure database schema // 重构（refactor）</span><br><span class="line">revert: undo previous commit // 回滚变更（revert）</span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h1 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h1><h2 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h2>]]></content>
      <categories>
        <category>知识库</category>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>【LeetCode】</title>
    <url>/2023/07/27/%E3%80%90LeetCode%E3%80%91/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>学习</category>
        <category>LeetCode</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>【MacOS】使用笔记</title>
    <url>/2021/11/25/%E3%80%90MacOS%E3%80%91%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="日常"><a href="#日常" class="headerlink" title="日常"></a>日常</h1><ul>
<li><code>command + C</code> 复制</li>
<li><code>command + V</code> 粘贴</li>
<li><code>option + command + V</code>  （正常复制后）剪贴</li>
<li><code>command + Z</code> 撤销</li>
<li><code>shift + command + Z</code> 重做（相当于撤销上一步的撤销）</li>
<li><code>command + D</code> 快速选中某词</li>
<li><code>command + tab</code> 向后切换应用</li>
<li><code>command + ～</code> 向前切换应用 &#x2F; 切换同一个应用的不同窗口</li>
<li><code>command + M</code> 最小化窗口</li>
<li><code>command + W</code>  关闭窗口</li>
<li><code>command + Q</code> 退出程序</li>
<li><code>command + shift + 4</code> 截屏</li>
<li><code>command + shift + 5</code> 录屏</li>
<li><code>control + A</code> 定位当前行首，现替换成 <code>command + 左方向键</code>更简单，配合 <code>shift</code>选中更丝滑</li>
<li><code>control + E</code> 定位当前行尾，现替换成 <code>command + 右方向键</code> 更简单</li>
</ul>
<h1 id="访达"><a href="#访达" class="headerlink" title="访达"></a>访达</h1><ul>
<li><code>enter</code> 重命名某文件</li>
<li><code>command + O</code> 打开某文件</li>
<li><code>command + delete</code> 删除某文件到废纸篓</li>
<li><code>command + [</code> 前往上一个文件夹</li>
<li><code>command + ]</code> 前往下一个文件夹</li>
<li><code>command + 上方向键</code> 前往上层文件夹</li>
<li><code>command + E</code> 推出磁盘映像</li>
</ul>
<h1 id="VSCode"><a href="#VSCode" class="headerlink" title="VSCode"></a>VSCode</h1><ul>
<li><code>control + G</code> 定位某行 </li>
<li><code>control + C </code>结束终端当前进程</li>
<li><code>command + shift + K</code> 删除整行代码 </li>
<li><code>option + command + F </code> 当前文件替换 </li>
<li><code>option + shift + 向上/向下箭头</code> 复制一行 </li>
<li><code>option + shift + F</code> 格式化代码</li>
</ul>
<h1 id="终端"><a href="#终端" class="headerlink" title="终端"></a>终端</h1><p>当遇到提示：“你不能使用以点“.”开头的名称,因为这些名称已被系统预留。请选取其他名称。”可以使用以下命令</p>
<ul>
<li>显示隐藏文件</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">defaults write com.apple.finder AppleShowAllFiles -boolean <span class="literal">true</span> ; killall Finder</span><br></pre></td></tr></table></figure>

<ul>
<li>隐藏隐藏文件</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">defaults write com.apple.finder AppleShowAllFiles FALSE ; killall Finder</span><br></pre></td></tr></table></figure>



<p>Mac终端</p>
<ul>
<li>Terminal 系统自带终端</li>
<li>iTerm2</li>
<li>Warp</li>
</ul>
<h1 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h1><h5 id="无法打开“xxx-app”，因为无法验证开发者。"><a href="#无法打开“xxx-app”，因为无法验证开发者。" class="headerlink" title="无法打开“xxx.app”，因为无法验证开发者。"></a><strong>无法打开“xxx.app”，因为无法验证开发者。</strong></h5><blockquote>
<p>打开【设置】，找到【隐私与安全性】，选择信任该 app即可。</p>
</blockquote>
]]></content>
      <categories>
        <category>知识库</category>
        <category>MacOS</category>
      </categories>
      <tags>
        <tag>MacOS</tag>
      </tags>
  </entry>
  <entry>
    <title>【Markdown】使用笔记（MacOS）</title>
    <url>/2022/06/29/%E3%80%90Markdown%E3%80%91%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0%EF%BC%88MacOS%EF%BC%89/</url>
    <content><![CDATA[<p><a href="https://zhuanlan.zhihu.com/p/632381789">Markdown教程</a></p>
<h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><ul>
<li>生成代码块 <code>option + command + C</code> </li>
<li>源码模式 <code>command + /</code></li>
<li>标题 <code>comand + 1</code> 或 2 、 3、 4</li>
<li>查找 <code>comand + F</code></li>
<li>超链接 <code>command + K</code></li>
<li>查找并替换 <code>option + command + F</code></li>
<li>无序列表 <code>option + command + U</code>  或 <code>- + tab</code></li>
<li>有序列表 <code>option + command + L</code> 或 <code>1. + tab</code> </li>
<li>代码  <code>control + ` </code></li>
<li>代码块 <code>option + command + C</code></li>
<li>引用 <code>option + command + Q</code></li>
<li>放大&#x2F;缩小 <code>shift + command + =</code> &#x2F; <code>shift + command + -</code></li>
</ul>
<h2 id="语法与文本内容冲突"><a href="#语法与文本内容冲突" class="headerlink" title="语法与文本内容冲突"></a>语法与文本内容冲突</h2><h4 id="使用反斜杠-来将这些字符进行转义"><a href="#使用反斜杠-来将这些字符进行转义" class="headerlink" title="使用反斜杠\来将这些字符进行转义"></a>使用反斜杠<code>\</code>来将这些字符进行转义</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*\*这样里面的文字就不会加粗了\*\*</span><br></pre></td></tr></table></figure>

<h4 id="使用多个反引号来创建代码块"><a href="#使用多个反引号来创建代码块" class="headerlink" title="使用多个反引号来创建代码块"></a>使用多个反引号来创建代码块</h4><p>如果你发现转义字符不起作用（例如，在某些Markdown解析器中可能会有差异），另一个方法是使用更多的反引号来创建代码块，并在里面放置你的代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">`` control + ` ``</span><br></pre></td></tr></table></figure>









]]></content>
      <categories>
        <category>知识库</category>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>【Hexo】使用笔记</title>
    <url>/2023/07/29/%E3%80%90Hexo%E3%80%91%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="一、初识Hexo"><a href="#一、初识Hexo" class="headerlink" title="一、初识Hexo"></a>一、初识Hexo</h2><h4 id="1-config-yml"><a href="#1-config-yml" class="headerlink" title="1._config.yml"></a>1._config.yml</h4><p>了解<code>_config.yml</code>配置文件的参数信息。网站的 <a href="https://hexo.io/zh-cn/docs/configuration">配置</a> 信息，可以在此配置大部分的参数。</p>
<h4 id="2-生成文章"><a href="#2-生成文章" class="headerlink" title="2.生成文章"></a>2.生成文章</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new &quot;post title with whitespace&quot;</span><br></pre></td></tr></table></figure>

<p>生成草稿</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new draft <span class="string">&quot;draft test&quot;</span></span><br></pre></td></tr></table></figure>

<p>预览草稿（直接使用 hexo server 是无法看到草稿的）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo server --draft</span><br></pre></td></tr></table></figure>



<h4 id="3-生成静态文件"><a href="#3-生成静态文件" class="headerlink" title="3.生成静态文件"></a>3.生成静态文件</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure>

<h4 id="4-部署"><a href="#4-部署" class="headerlink" title="4.部署"></a>4.部署</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>





<h2 id="二、配置"><a href="#二、配置" class="headerlink" title="二、配置"></a>二、配置</h2><p>开启文章资源文件夹</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">post_asset_folder = <span class="literal"><span class="keyword">true</span></span></span><br></pre></td></tr></table></figure>

<h2 id="三、分类"><a href="#三、分类" class="headerlink" title="三、分类"></a>三、分类</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure>

<h2 id="四、搜索"><a href="#四、搜索" class="headerlink" title="四、搜索"></a>四、搜索</h2><ul>
<li><a href="https://github.com/theme-next/hexo-generator-searchdb">hexo-generator-searchdb</a> 用于搜索</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<p>然后将以下配置复制到你博客根目录下的 <code>_config.yml</code> 里:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># hexo-generator-searchdb</span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br></pre></td></tr></table></figure>

<ul>
<li><a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> 用于生成 RSS 订阅</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>

<p>然后将以下配置复制到你博客根目录下的 <code>_config.yml</code> 里:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">feed:</span><br><span class="line">  type: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  limit: 20</span><br><span class="line">  hub:</span><br><span class="line">  content:</span><br><span class="line">  content_limit: 140</span><br><span class="line">  content_limit_delim: &quot; &quot;</span><br><span class="line">  order_by: -date</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>知识库</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>【React】笔记</title>
    <url>/2023/03/25/%E3%80%90React%E3%80%91%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>创建 react</p>
<p><a href="https://zh-hans.react.dev/learn/start-a-new-react-project">https://zh-hans.react.dev/learn/start-a-new-react-project</a></p>
<h1 id="React-入门"><a href="#React-入门" class="headerlink" title="React 入门"></a>React 入门</h1><h4 id="JSX"><a href="#JSX" class="headerlink" title="JSX"></a>JSX</h4><p>JavaScript 和XML的缩写</p>
<p>在 JS 中编写 HTML 模板结构</p>
<p>通过 Babel 编译 成 JS</p>
<p>组件化开发模式</p>
<p>组件类型</p>
<ul>
<li>函数式组件</li>
<li>类式组件</li>
</ul>
<h1 id="React-面向组件编程"><a href="#React-面向组件编程" class="headerlink" title="React 面向组件编程"></a>React 面向组件编程</h1><h2 id="组件三大核心属性"><a href="#组件三大核心属性" class="headerlink" title="组件三大核心属性"></a>组件三大核心属性</h2><p>state</p>
<p>props</p>
<p>refs</p>
<h2 id="生命周期钩子"><a href="#生命周期钩子" class="headerlink" title="生命周期钩子"></a>生命周期钩子</h2><ul>
<li>constructor 构造器</li>
<li>componentWillMount 组件将要挂载</li>
<li>render 渲染</li>
<li>componentDidMount 组价挂载完毕</li>
<li>componentWillUnmount 组价将要卸载</li>
</ul>
<p>生命周期（新）</p>
<h1 id="React-应用（脚手架）"><a href="#React-应用（脚手架）" class="headerlink" title="React 应用（脚手架）"></a>React 应用（脚手架）</h1><h3 id="全局安装脚手架"><a href="#全局安装脚手架" class="headerlink" title="全局安装脚手架"></a>全局安装脚手架</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i -g create-react-app</span><br></pre></td></tr></table></figure>



<h3 id="组件化编码流程"><a href="#组件化编码流程" class="headerlink" title="组件化编码流程"></a>组件化编码流程</h3><ol>
<li>拆分组件</li>
<li>实现静态组件</li>
<li>实现动态组件<ol>
<li>动态显示初始化数据<ol>
<li>数据类型</li>
<li>数据名称</li>
<li>保存在哪个组件？</li>
</ol>
</li>
<li>交互</li>
</ol>
</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;<span class="title class_">Item</span> &#123;...todo&#125;&gt;&lt;/<span class="title class_">Item</span>&gt;</span><br><span class="line"><span class="comment">// 等价于</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">Item</span> <span class="attr">id</span>=<span class="string">&#123;todo.id&#125;</span> <span class="attr">name</span>=<span class="string">&#123;todo.name&#125;</span> &gt;</span><span class="tag">&lt;/<span class="name">Item</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>组件通信</p>
<p>父 -&gt; 子</p>
<p>通过 props</p>
<p>子 -&gt; 父 </p>
<p>通过 回调函数，父组件把函数传给子组件，子组件在合适的时候，调用该函数，将值传入该函数</p>
<h1 id="React-路由"><a href="#React-路由" class="headerlink" title="React 路由"></a>React 路由</h1><h1 id="Redux"><a href="#Redux" class="headerlink" title="Redux"></a>Redux</h1><h4 id="创建-react-项目"><a href="#创建-react-项目" class="headerlink" title="创建 react 项目"></a>创建 react 项目</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npx create-react-app react-basic</span><br></pre></td></tr></table></figure>



<p>index.js</p>
<p>App.js</p>
<h4 id="useState"><a href="#useState" class="headerlink" title="useState"></a>useState</h4><p>数据驱动视图</p>
<p>直接修改原对象 是无法改变视图的</p>
<p>需要替换整个对象</p>
<p>组件样式</p>
<p>拓展：tailwind 样式是什么？</p>
<p>浏览器插件：React Developer Tools</p>
<p>利用 lodash 实现排序</p>
<p>_.ordeBy</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install classnames</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>知识库</category>
        <category>React</category>
      </categories>
      <tags>
        <tag>React</tag>
      </tags>
  </entry>
  <entry>
    <title>【VSCode】使用笔记</title>
    <url>/2021/10/18/%E3%80%90VSCode%E3%80%91%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="必装插件"><a href="#必装插件" class="headerlink" title="必装插件"></a>必装插件</h1><h2 id="1-基础插件"><a href="#1-基础插件" class="headerlink" title="1. 基础插件"></a>1. 基础插件</h2><ol>
<li><p><strong>GitLens</strong> （Git 提交记录提示）</p>
</li>
<li><p><strong>Error Lens</strong> （代码错误提示）</p>
</li>
<li><p><strong>Auto Rename Tag</strong> （自动补充 HTML 标签）</p>
</li>
<li><p><strong>AZ AL Dev Tools&#x2F;AL Code Outline</strong> （梳理代码结构的插件）</p>
</li>
<li><p><strong>Better Comments</strong> （颜色区分不同注释）</p>
</li>
<li><p><strong>Turbo Console Log</strong> （自动写console）</p>
</li>
<li><p><strong>Bracket Pair Colorizer2</strong> （颜色区分括号）</p>
</li>
<li><p><strong>Chinese</strong> （汉化 VSCode）</p>
</li>
<li><p><strong>Code Runner</strong> （允许简单代码）</p>
</li>
<li><p><strong>Code Spell Checker</strong> （代码拼写错误提示）</p>
</li>
<li><p><strong>Color Highlight</strong> （代码区域高亮）</p>
</li>
<li><p><strong>ESLint， 格式化代码</strong></p>
</li>
<li><p><strong>翻译（英汉词典）</strong></p>
</li>
<li><p><strong>Image preview</strong> （预览图片文件）</p>
</li>
<li><p><strong>indent-rainbow</strong> （缩进高亮）</p>
</li>
<li><p><strong>Regex Previewer</strong> （预览正则表达式）</p>
</li>
<li><p><strong>Material Icon Theme</strong> （主题）</p>
</li>
<li><p><strong>open in browser</strong> （浏览器运行）</p>
</li>
<li><p><strong>Partial Diff</strong> （对比代码差异）</p>
</li>
<li><p><strong>Project Manager</strong> （管理不同项目&#x2F;代码库）</p>
</li>
<li><p><strong>Zhihu On VSCode</strong> （字面意思，摸鱼用）</p>
</li>
</ol>
<h2 id="2-React-开发插件"><a href="#2-React-开发插件" class="headerlink" title="2. React 开发插件"></a>2. React 开发插件</h2><ol>
<li><p><strong>ES7+ React&#x2F;Redux&#x2F;React-Native snippets</strong> （React 快捷代码生成）</p>
</li>
<li></li>
</ol>
<h1 id="VSCode-设置"><a href="#VSCode-设置" class="headerlink" title="VSCode 设置"></a>VSCode 设置</h1><ul>
<li>设置多行 Tabs</li>
</ul>
<blockquote>
<p>设置中搜索Wrap Tabs，并打勾</p>
</blockquote>
]]></content>
      <categories>
        <category>知识库</category>
        <category>VSCode</category>
      </categories>
      <tags>
        <tag>VSCode</tag>
      </tags>
  </entry>
  <entry>
    <title>【TypeScript】笔记</title>
    <url>/2021/09/20/%E3%80%90TypeScript%E3%80%91%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p><a href="https://www.tslang.cn/">TypeScript 中文网</a></p>
]]></content>
      <categories>
        <category>知识库</category>
        <category>TypeScript</category>
      </categories>
      <tags>
        <tag>TypeScript</tag>
      </tags>
  </entry>
  <entry>
    <title>【个人博客】</title>
    <url>/2023/08/25/%E3%80%90%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E3%80%91/</url>
    <content><![CDATA[<h2 id="test"><a href="#test" class="headerlink" title="test"></a>test</h2><p>Typora Markdown</p>
<p>目录规划</p>
<ul>
<li>知识库<ul>
<li>计算机网络</li>
</ul>
</li>
<li>工作<ul>
<li><p>简历</p>
</li>
<li><p>面试</p>
</li>
<li><p>LeetCode</p>
</li>
</ul>
</li>
<li>阅读</li>
<li>随笔</li>
<li>旅游</li>
</ul>
<p>图床</p>
<p>评论</p>
<p>图文</p>
<p>音乐</p>
<p>视频</p>
]]></content>
      <categories>
        <category>知识库</category>
        <category>博客</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>【云计算】</title>
    <url>/2023/05/04/%E3%80%90%E4%BA%91%E8%AE%A1%E7%AE%97%E3%80%91%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>云计算服务通常分为三个基本类型：</p>
<ul>
<li><strong>基础设施即服务（IaaS）</strong>：提供虚拟化的计算资源，如虚拟机、存储空间、网络等。</li>
<li><strong>平台即服务（PaaS）</strong>：提供应用程序开发和部署的平台，包括操作系统、数据库管理系统、开发工具等。</li>
<li><strong>软件即服务（SaaS）</strong>：提供通过互联网访问的应用软件，客户无需安装即可使用这些应用。</li>
</ul>
<h1 id="云服务器-ECS"><a href="#云服务器-ECS" class="headerlink" title="云服务器 ECS"></a>云服务器 ECS</h1><blockquote>
<p>云服务器ECS（Elastic Compute Service）是提供可弹性伸缩的计算能力的IaaS级别云计算服务。即虚拟的物理服务器，由服务商搭建维护，用户按需租赁使用。</p>
</blockquote>
<p>用户可以通过互联网远程访问这些虚拟化的计算资源，并且可以根据业务需求快速地调整资源配置，例如CPU、内存、硬盘空间等。ECS消除了传统物理服务器的硬件投资和维护成本，提供了灵活、高效、可靠的计算服务。</p>
<p>PS：不同厂商对云计算服务有不同的叫法，</p>
<ul>
<li>阿里云 叫 <strong>云服务器 ECS</strong>（Elastic Compute Service）</li>
<li>腾讯云 叫 <strong>云服务器 CVM</strong>（Cloud Virtual Machine）</li>
<li>移动云 叫 <strong>云主机 ECS</strong></li>
</ul>
<h2 id="云服务器-ECS-由什么组成？"><a href="#云服务器-ECS-由什么组成？" class="headerlink" title="云服务器 ECS 由什么组成？"></a>云服务器 ECS 由什么组成？</h2><p>云服务器通常包含实例、镜像、块存储、安全组、快照、网络等功能组件。</p>
<ul>
<li>实例：等同于一台虚拟服务器，内含 vCPU、内存、操作系统、网络额配置、磁盘等基础计算组件。</li>
<li>镜像：等同于“装机盘”，为 ECS 实例提供操作系统和预装的软件。</li>
<li>块存储：分布式数据存储设备。</li>
<li>安全组：一种虚拟防火墙，划分安全隔离区域，实现网络访问控制</li>
<li>快照：某一时间点云盘的实时副本，常用于数据备份&#x2F;恢复、应用容灾、制作镜像等。</li>
<li>网络：主要是有专有网络 VPC，在逻辑上可彻底隔离的云上私有网络。</li>
</ul>
<p>以下是移动云的例子 </p>
<p><strong>实例</strong>：提供各种实例规格（CPU、内存），不同 CPU 内存比，从“1核2G”到“80核1280G”，移动云的通用型s5云主机规格，s5.large.2，vCPU 2 个，内存 4GB，s5.xlarge.2则是 4C8G</p>
<p><strong>镜像</strong>：是用于创建 ECS 的模板。支持多种 Windows 和 Linux 操作系统，可以选择公共镜像、私有镜像（已部署好业务的 ECS 可创建为自定义镜像，镜像文件.qcow2）</p>
<p><strong>块存储</strong>：移动云的云硬盘，有多种类型：容量型、性能型、性能优化型、高性能型</p>
<p><strong>网络</strong>：虚拟私有云 <strong>VPC</strong>（Virtual Private Cloud）基于先进的SDN 技术，为云服务器、云容器、云数据库等云上资源构建隔离、私密的虚拟网络环境，使用户能够构建独立的网络空间。支持<strong>子网管理</strong>（子网是由一组IP地址组成的地址池，每个子网相当于一个分布式虚拟交换机），支持<strong>多网卡功能</strong>（创建云主机时系统自动创建一个虚拟网卡，为云主机提供虚拟网络功能）<a href="https://ecloud.10086.cn/op-help-center/doc/article/24853">应用场景</a></p>
<h1 id="专有宿主机-DDH"><a href="#专有宿主机-DDH" class="headerlink" title="专有宿主机 DDH"></a>专有宿主机 DDH</h1><blockquote>
<p>专有宿主机 （Dedicated Host，简称DDH）是专为企业用户定制优化的解决方案。具有物理资源独享、部署更灵活、配置更丰富、性价比更高等特点。专有宿主机为单租户独享物理资源，同时宿主机上可以灵活创建ECS云服务器，并和其他ECS云服务器一样，可以挂载云盘，可以通过VPC联通，具有高度的灵活性和使用便捷性。</p>
</blockquote>
<h1 id="负载均衡-SLB"><a href="#负载均衡-SLB" class="headerlink" title="负载均衡 SLB"></a>负载均衡 SLB</h1><blockquote>
<p>负载均衡（Server Load Balancer，简称SLB）是云原生时代应用高可用的基本要素。是一种对流量进行按需分发的服务。通过将流量分发到不同的后端服务来扩展应用系统的服务吞吐能力，消除单点故障并提升应用系统的可用性。</p>
</blockquote>
<h1 id="弹性公网"><a href="#弹性公网" class="headerlink" title="弹性公网"></a>弹性公网</h1><blockquote>
<p>弹性公网IP EIP（Elastic IP Address）是独立的公网IP资源，可与专有网络VPC类型的云服务器ECS、NAT网关、ENI网卡、私网负载均衡SLB绑定，并可以动态解绑满足灵活管理的要求。弹性公网IP可以给在云上部署的网站提供Internet访问服务。</p>
</blockquote>
<p><strong>EIP 与 ECS固定公网IP 的区别</strong></p>
<p>下表描述了EIP与ECS固定公网IP的区别。</p>
<table>
<thead>
<tr>
<th>比较点</th>
<th>EIP</th>
<th>ECS固定公网IP</th>
</tr>
</thead>
<tbody><tr>
<td>支持的网络环境</td>
<td>专有网络</td>
<td>专有网络和经典网络</td>
</tr>
<tr>
<td>是否支持单独持有</td>
<td>支持</td>
<td>不支持</td>
</tr>
<tr>
<td>是否支持在ECS实例上的弹性插拔</td>
<td>支持</td>
<td></td>
</tr>
</tbody></table>
<p><strong>产品优势</strong></p>
<p>EIP的优势如下：</p>
<ul>
<li><strong>独立购买与持有</strong><br> 您可以单独持有一个EIP，作为您账号下一个独立的资源存在，无需与其它计算资源或存储资源绑定购买。</li>
<li><strong>弹性绑定</strong><br> 您可以在需要时将EIP绑定到指定的资源上，在不需要时将EIP解绑并释放，避免不必要的计费。</li>
<li><strong>灵活配置的网络能力</strong><br> 您可以根据业务需求随时调整EIP的带宽峰值，带宽峰值的修改即时生效。</li>
<li><strong>计费灵活、成本低</strong><br> 多种计费策略，支持包年包月、按固定带宽和按使用流量计费。EIP加入共享带宽后可以降低带宽成本。</li>
</ul>
<h1 id="虚拟私有云-VPC"><a href="#虚拟私有云-VPC" class="headerlink" title="虚拟私有云 VPC"></a>虚拟私有云 VPC</h1><blockquote>
<p>虚拟私有云VPC（Virtual Private Cloud，简称VPC）是一个公共云计算资源的动态配置池，需要使用加密协议、隧道协议和其他安全程序，在民营企业和云服务提供商之间传输数据。一个VPC基本上把提供商的多租户架构变成单租户架构。</p>
</blockquote>
<p>每个专有网络都由至少一个私网网段、一个虚拟路由器和至少一个交换机组成。</p>
<h1 id="NAT-网关"><a href="#NAT-网关" class="headerlink" title="NAT 网关"></a>NAT 网关</h1><blockquote>
<p>NAT网关（NAT Gateway，简称NAT）提供公网NAT和私网NAT两种功能。公网NAT网关通过自定义SNAT、DNAT规则可为云上服务器提供对外公网服务、及主动访问公网能力；私网NAT网关(也即VPC NAT网关)可使VPC内的ECS实例通过私网地址转换服务，实现VPC与VPC之间、及VPC与线下IDC互访能力。</p>
</blockquote>
<h1 id="SSL-证书"><a href="#SSL-证书" class="headerlink" title="SSL 证书"></a>SSL 证书</h1><blockquote>
<p>SSL证书（Secure Sockets Layer证书）是一种安全协议，用于在互联网上的服务器和浏览器之间建立加密链接。这意味着所有在服务器和浏览器之间传输的数据都是加密的，这有助于保护敏感信息免受黑客攻击，如信用卡信息、登录凭据和个人信息等。</p>
</blockquote>
<p>SSL证书的工作原理是通过使用公钥和私钥来加密数据。当用户访问使用SSL的网站时，浏览器和服务器会进行一个称为”握手”的过程，以建立一个加密连接。SSL证书还包含了证书持有人的身份信息，并由第三方机构（证书颁发机构，CA）签发和验证，以确保用户访问的网站是合法的。</p>
<p>可以在阿里云，申请免费证书，但免费证书的签发有效期是 3 个月（之前是 12 个月），到期要重新申请。</p>
<p>PS：在宝塔面板中添加 SSL 证书的<strong>密钥（key）</strong>和<strong>证书（pem）</strong>，并打开强制 HTTPS，别忘了安全组里要开放 <strong>https（443）</strong>端口</p>
<h1 id="对象存储-OSS"><a href="#对象存储-OSS" class="headerlink" title="对象存储 OSS"></a>对象存储 OSS</h1><blockquote>
<p>对象存储 OSS（Object Storage Service）是一款海量、安全、低成本、高可靠的云存储服务，提供最高可达 99.995 % 的服务可用性。多种存储类型供选择，全面优化存储成本。</p>
</blockquote>
]]></content>
      <categories>
        <category>知识库</category>
        <category>云计算</category>
      </categories>
      <tags>
        <tag>运维</tag>
        <tag>云计算</tag>
      </tags>
  </entry>
  <entry>
    <title>【微信小程序】</title>
    <url>/2021/02/21/%E3%80%90%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E3%80%91/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>知识库</category>
        <category>微信小程序</category>
      </categories>
      <tags>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>【计算机网络】</title>
    <url>/2022/06/15/%E3%80%90%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%91/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>知识库</category>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建图床（Typora+PicGo+阿里云OSS）</title>
    <url>/2024/03/21/%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A%EF%BC%88Typora+PicGo+%E9%98%BF%E9%87%8C%E4%BA%91OSS%EF%BC%89/</url>
    <content><![CDATA[<h1 id="一、Typora"><a href="#一、Typora" class="headerlink" title="一、Typora"></a>一、Typora</h1><p>（PS：若使用 Obisidian 也大同小异）</p>
<p><img src="https://www.image.junglexs.com/blog/202403220114798.jpg" alt="Typora设置PicGo"></p>
<h1 id="二、PicGo"><a href="#二、PicGo" class="headerlink" title="二、PicGo"></a>二、PicGo</h1><p>下载链接：<a href="https://molunerfinn.com/PicGo/">https://molunerfinn.com/PicGo/</a></p>
<h3 id="1-图床设置"><a href="#1-图床设置" class="headerlink" title="1. 图床设置"></a>1. 图床设置</h3><p>需要填 6 个表单项</p>
<p>1）图床配置名（这个可以随便填）</p>
<p>2）KeyId</p>
<p>3）KeySecret</p>
<p>4）Bucket</p>
<p>5）存储区域</p>
<p>6）存储路径</p>
<p>别着急，具体怎么填在下一步</p>
<p><img src="https://www.image.junglexs.com/blog/202403252051879.png" alt="图床设置"></p>
<h3 id="2-PicGo设置"><a href="#2-PicGo设置" class="headerlink" title="2. PicGo设置"></a>2. PicGo设置</h3><p>推荐把 “时间戳重命名” 打开</p>
<p><img src="https://www.image.junglexs.com/blog/202403220153596.png" alt="PicGo设置"></p>
<h1 id="三、阿里云-OSS"><a href="#三、阿里云-OSS" class="headerlink" title="三、阿里云 OSS"></a>三、阿里云 OSS</h1><p>1）在 <a href="https://www.aliyun.com/?spm=5176.12818093_-1363046575.top-nav.dlogo.2a8b16d0AgFpYt">阿里云官网</a> 找到 对象存储 OSS，并选择立即开通</p>
<p><img src="https://www.image.junglexs.com/blog/202403220125764.png" alt="开通 OSS"></p>
<p>2）创建 Bucket 存储桶 </p>
<ul>
<li>Bucket 名称就是 PicGo 配置中要填的 <strong>Bucket</strong></li>
<li>Endpoint 就是 PicGo 配置中要填的 <strong>存储区域</strong>（比如 oss-cn-hangzhou）（.aliyuncs.com不需要填）</li>
</ul>
<p><img src="https://www.image.junglexs.com/blog/202403252055994.png" alt="创建 Bucket"></p>
<p> 3）创建 AccessKey ID 和 AccessKey Secret</p>
<ul>
<li>AccessKey ID 就是 PicGo 配置中要填的 <strong>KeyId</strong></li>
<li>AccessKey Secret 就是 PicGo 配置中要填的 <strong>KeySecret</strong></li>
</ul>
<p><img src="https://www.image.junglexs.com/blog/202403252057579.png" alt="创建 AccessKey"></p>
<p>4）在 Bucket 中新建目录</p>
<ul>
<li>目录 就是 PicGo 配置中要填的 <strong>存储路径</strong></li>
</ul>
<p><img src="https://www.image.junglexs.com/blog/202403252105971.png" alt="新建存储目录"></p>
<h1 id="四、测试"><a href="#四、测试" class="headerlink" title="四、测试"></a>四、测试</h1><p><img src="https://www.image.junglexs.com/blog/202403231801185.png" alt="测试上传图床"></p>
<h1 id="进阶操作"><a href="#进阶操作" class="headerlink" title="进阶操作"></a>进阶操作</h1><ul>
<li><p><strong>为图床增加自定义域名</strong></p>
<ul>
<li>该域名需要进行 ICP 备案</li>
<li>同时最好已经获取 SSL证书</li>
</ul>
</li>
<li><p><strong>使用 RAM 访问控制</strong></p>
<ul>
<li>创建用户，选择开通 OpenAPI，获取 AccessKey ID 和 AccessKey Secret</li>
<li>别忘了给该用户添加上有关 OSS 的权限（例如：管理对象存储服务（OSS）权限）</li>
</ul>
</li>
</ul>
<h1 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h1><p>1）Mac系统安装PicGo时打开报错：<strong>“PicGo.app”已损坏，无法打开。 你应该将它移到废纸篓。</strong></p>
<blockquote>
<p>解决办法，打开终端输入以下内容，””为安装路径，默认是以下路径</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo xattr -d com.apple.quarantine <span class="string">&quot;/Applications/PicGo.app&quot;</span></span><br></pre></td></tr></table></figure>

<p>按照提示输入电脑锁屏密码回车即可</p>
</blockquote>
<p>2）都配置好了，但还是上传报错</p>
<blockquote>
<p>确认存储区域，就是上面的 Endpoint 的地址 ，比如你的是，oss-cn-beijing.aliyuncs.com 那么这里就是 “oss-cn-beijing”，去掉阿里云的后缀</p>
</blockquote>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>图床</tag>
        <tag>Typora</tag>
        <tag>PicGo</tag>
        <tag>OSS</tag>
      </tags>
  </entry>
  <entry>
    <title>深入掌握 OSS：最完美的 OSS 上传方案！</title>
    <url>/2024/03/22/%E6%B7%B1%E5%85%A5%E6%8E%8C%E6%8F%A1%20OSS%EF%BC%9A%E6%9C%80%E5%AE%8C%E7%BE%8E%E7%9A%84%20OSS%20%E4%B8%8A%E4%BC%A0%E6%96%B9%E6%A1%88%EF%BC%81/</url>
    <content><![CDATA[<h2 id="原文链接"><a href="#原文链接" class="headerlink" title="原文链接"></a><a href="https://juejin.cn/post/7325495635455868938">原文链接</a></h2><p>上传文件一般不会直接存在服务器目录下，这样不好扩展，一般我们会用阿里云的 OSS（Object Storage Service）对象存储服务，它会自己做弹性扩展，所以存储空间是无限的。</p>
<p>OSS 对象存储是在一个 bucket 桶下，存放多个文件。</p>
<p>它是用 key-value 存储的，没有目录的概念，阿里云 OSS 的目录只是用元信息来模拟实现的。</p>
<p>上传文件后，我们能拿到文件 URL，但生产环境下我们不会直接用 OSS 的 URL 访问，而是会开启 CDN，用网站域名访问，最终回源到 OSS 服务。因此还需要开通 CDN 服务</p>
<p>不管在哪里上传，都需要 acessKeyId 和 acessKeySecret。</p>
<p>这个是阿里云的安全策略，因为直接用用户名密码，一旦泄漏就很麻烦，而 acessKey 泄漏了也可以禁用。而且建议用 RAM 子用户的方式生成 accessKey，这样可以最小化权限，进一步减少泄漏的风险。</p>
<p>客户端直传 OSS 的方式不需要消耗服务器的资源，但是会有泄漏 acessKey 的风险，所以一般都是用服务端生成临时的签名等信息，然后用这些信息来上传。</p>
]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>OSS</tag>
        <tag>每日阅读</tag>
      </tags>
  </entry>
  <entry>
    <title>面试官问我按钮级别权限怎么控制，我说v-if，面试官说再见</title>
    <url>/2024/03/04/%E9%9D%A2%E8%AF%95%E5%AE%98%E9%97%AE%E6%88%91%E6%8C%89%E9%92%AE%E7%BA%A7%E5%88%AB%E6%9D%83%E9%99%90%E6%80%8E%E4%B9%88%E6%8E%A7%E5%88%B6%EF%BC%8C%E6%88%91%E8%AF%B4v-if%EF%BC%8C%E9%9D%A2%E8%AF%95%E5%AE%98%E8%AF%B4%E5%86%8D%E8%A7%81/</url>
    <content><![CDATA[<h2 id="原文链接"><a href="#原文链接" class="headerlink" title="原文链接"></a><a href="https://juejin.cn/post/7209648356530896953">原文链接</a></h2><p>按钮级别权限控制，怎么做？使用v-if ？可以，但不够通用。</p>
<p>要做权限控制，肯定需要一个<code>code</code>，无论是权限码还是角色码都可以，一般后端会一次性返回，然后全局存储起来就可以了</p>
<p>文章作者提供了三个思路</p>
<ol>
<li><p>函数方式</p>
<p>本质上就是通过<code>v-if</code>，只不过是通过一个统一的权限判断方法<code>hasPermission</code></p>
</li>
<li><p>组件方式</p>
<p>使用<code>Authority</code>包裹需要权限控制的按钮即可，该按钮需要的权限码通过<code>value</code>属性传入</p>
</li>
<li><p>指令方式</p>
<p>v-auth</p>
</li>
</ol>
<p>ps：评论区有其他见解</p>
<p>使用装饰器配置权限标识</p>
<p>前端无非就是调用后端权限状态集合，根据集合控制相应dom是否渲染，怎么实现都行，麻烦的就是状态集合的约定和维护，要有严格的规范和约定。<br>而且，真正的权限控制只让前端处理是不严谨，后端同时也要确保相应业务功能接口的无权访问，这就要把ui、权限码、api三者关联维护起来，这就考验团队整体素质了。</p>
]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>每日阅读</tag>
        <tag>Vue</tag>
        <tag>权限</tag>
      </tags>
  </entry>
  <entry>
    <title>【计算机组成原理】</title>
    <url>/2020/05/21/%E3%80%90%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E3%80%91/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>知识库</category>
        <category>计算机组成原理</category>
      </categories>
      <tags>
        <tag>计算机组成原理</tag>
      </tags>
  </entry>
</search>
